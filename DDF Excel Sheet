package in.amazon.testscripts;

import java.io.IOException;

import org.testng.Assert;
import org.testng.annotations.Test;

import in.amazon.pages.LandingPage;
import in.amazon.pages.SignIn;
import utils.ReadExcel;

public class DDF extends BaseTest {
	  //Data Driven FrameWork - when the same application is tested against different
	//set of data
	@Test
	
	public void verifyErrorMsg() throws IOException {
		//4)HOver the pointer over "Hello Sign in' menu
		LandingPage landingPage = new LandingPage(driver);
		landingPage.hoverOverHelloSignInMenu();
		
		//5) Click on 'Sign-in' button in the sub-menu
		landingPage.clickSignInBtn();
		
		String[][] data =ReadExcel.getData("resources//TestData.xlsx", "Sheet1");
		for(int i = 1; i< 6; i++) {
			String username = data[i][1];
		
		
		
		//6) Enter invalid username in the email textbox
		SignIn signIn = new SignIn(driver);
		signIn.enterEmail(username);
		
		//7) Click on 'Continue' button
		signIn.clickContinueBtn();
		
		
		//8)Verify the error message -'we cannot find an account with that email
		//address is displayed to the user
	String expectedErrMsg = "We cannot find an account with that email address";
	String actualErrMsg = signIn.getErrMsg();
	Assert.assertEquals(actualErrMsg, expectedErrMsg);
	
	
	
	
	}
}
}

package utils;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.DataFormatter;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class ReadExcel {
	
	public static String[][] getData(String fileName, String sheetName) throws IOException {
		File file = new File(fileName);
		FileInputStream ips = new FileInputStream(file); // FileOutputStream for writing the data on excel sheet
		Workbook Wb = new XSSFWorkbook(ips);
		Sheet Sh = Wb.getSheet(sheetName);
		int rowNum = Sh.getLastRowNum() + 1;
		int colNum = Sh.getRow(0).getLastCellNum();
		String[][] data = new String[rowNum][colNum];

		for (int i = 0; i < rowNum; i++) {
			Row row = Sh.getRow(i);
			for (int j = 0; j < colNum; j++) {
				Cell cell = row.getCell(j);
				String value = new DataFormatter().formatCellValue(cell);
				data[i][j] = value;
			}
		}
		return data;
	}

}
